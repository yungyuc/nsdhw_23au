### Settings ###

## The Target Files ##

TARGET_NAME	?= _matrix
TARGET_SO_LIB	?= ${TARGET_NAME}$(shell python3-config --extension-suffix)

## The File Structure ##

SRC_DIR	:= src
INC_DIR	:= inc
LIB_DIR	:= .
BLD_DIR	:= build
OBJ_DIR	:= ${BLD_DIR}/obj
BIN_DIR	:= ${BLD_DIR}/bin
TGT_DIR	:= .
TST_DIR	:= .

## Compiling ##

CXX	?= g++
CXX_STD	:= c++17
CXX_INCS	:= $(addprefix -I,${INC_DIR}) \
				$(shell python3-config --includes)
CXX_LIBS	:= $(addprefix -L,${LIB_DIR}) \
				$(shell python3-config --ldflags)
CXX_FLAGS	:= -O3 -Wall -shared -fPIC
ifdef CXX_STD
CXX_FLAGS	+= -std=${CXX_STD}
endif
CXX_COMPILE	:= ${CXX} ${CXX_FLAGS} ${CXX_INCS} ${CXX_LIBS}

# Workaround for cmake + MKL in conda
export PRELOAD_MKL	:= 1
MKL_LIB_DIR=/usr/lib/x86_64-linux-gnu
MKL_LIBS	:= ${MKL_LIB_DIR}/libmkl_def.so$\
				:${MKL_LIB_DIR}/libmkl_avx2.so$\
				:${MKL_LIB_DIR}/libmkl_core.so$\
				:${MKL_LIB_DIR}/libmkl_intel_lp64.so$\
				:${MKL_LIB_DIR}/libmkl_sequential.so
export LD_PRELOAD	:= ${MKL_LIBS}


### Targets ###

## The Default Target ##

# The default behavior is to build the source code
.PHONY: default
default: build install

## Other Phony Targets ##

# Build the source code
.PHONY: build
build: ${BIN_DIR}/${TARGET_SO_LIB}

# Install the compiled library
.PHONY: install
install:
	cp ${BIN_DIR}/${TARGET_SO_LIB} ${TGT_DIR}/${TARGET_SO_LIB}

# Run the Python script to test the compiled library
.PHONY: test
test: build install
	python3 -m pytest -sv ${TST_DIR}

# Run the Python script to analyze the the compiled library
# .PHONY: perf
# perf: build
# 	python3 "${SRC_DIR}/performance.py"

# Remove all the built and intermediate files
.PHONY: clean
clean:
	${RM} "${TGT_DIR}/${TARGET_SO_LIB}"
	${RM} "${BIN_DIR}/${TARGET_SO_LIB}"
	${RM} -rd "${BLD_DIR}"
	${RM} -rd "__pycache__" ".pytest_cache"

## Source Code Targets ##

${BIN_DIR}/${TARGET_SO_LIB}: \
		${OBJ_DIR}/mod.o \
		${OBJ_DIR}/matrix/matrix_op.o ${OBJ_DIR}/matrix/matrix.o \
		${OBJ_DIR}/matrix/stl.o | ${BIN_DIR}
	${CXX_COMPILE} $^ -o $@

${OBJ_DIR}/mod.o: \
		../mod.cpp ${INC_DIR}/matrix.hpp | ${OBJ_DIR}
	${CXX_COMPILE} -c $< -o $@

${OBJ_DIR}/matrix/matrix_op.o: \
		${SRC_DIR}/matrix/matrix_op.cpp ${INC_DIR}/matrix/matrix_op.hpp \
		| ${OBJ_DIR}/matrix
	${CXX_COMPILE} -c $< -o $@

${OBJ_DIR}/matrix/matrix.o: \
		${SRC_DIR}/matrix/matrix.cpp ${INC_DIR}/matrix/matrix.hpp \
		| ${OBJ_DIR}/matrix
	${CXX_COMPILE} -c $< -o $@

${OBJ_DIR}/matrix/stl.o: \
		${SRC_DIR}/matrix/stl.cpp ${INC_DIR}/matrix/stl.hpp | ${OBJ_DIR}/matrix
	${CXX_COMPILE} -c $< -o $@

${INC_DIR}/matrix.hpp: ${INC_DIR}/matrix/stl.hpp ${INC_DIR}/matrix/matrix.hpp \
		${INC_DIR}/matrix/matrix_op.hpp

${INC_DIR}/matrix/matrix_op.hpp: ${INC_DIR}/matrix/matrix.hpp
${INC_DIR}/matrix/matrix.hpp: ${INC_DIR}/matrix/stl.hpp

${BIN_DIR} ${OBJ_DIR} ${OBJ_DIR}/matrix:
	@ mkdir -p $@
